spring.thymeleaf.cache=false

#Message
message.invalidFormMessage = Invalid form or the name already existed, please try again!
message.deleteErr = Opps! Something went wrong, please try again or <a href='https://www.fb.com/yzenny97' target='_blank' style='color:orange'>report to us</a>
message.dupSentenceMess = A sentence name already existed!
message.dupSynonymMess = A synonym name already existed!
 
# Set here configurations for the database connection

# Connection url for the database
spring.datasource.url=jdbc:mysql://localhost:3306/learn_english?useSSL\=false
# MySQL username and password 
spring.datasource.username=root
spring.datasource.password=nhuy

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.validation-query=SELECT 1

# ===============================
# JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
